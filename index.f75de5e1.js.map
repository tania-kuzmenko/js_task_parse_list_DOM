{"mappings":"AAAA;AAEA,MAAM,aAAa,SAAS,aAAa,CAAC;AAE1C,MAAM,iBAAiB,CAAC;IACtB,OAAO,OAAO,IAAI,OAAO,CAAC,cAAc;AAC1C;AAEA,MAAM,WAAW,CAAC;IAChB,OAAO,MAAM,IAAI,CAAC,KAAK,QAAQ,EAC5B,IAAI,CACH,CAAC,GAAG,IACF,eAAe,EAAE,OAAO,CAAC,MAAM,IAAI,eAAe,EAAE,OAAO,CAAC,MAAM,GAErE,OAAO,CAAC,CAAC,OAAS,KAAK,WAAW,CAAC;AACxC;AAEA,MAAM,eAAe,CAAC;IACpB,OAAO,MAAM,IAAI,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,CAAC;QACpC,OAAO;YACL,MAAM,KAAK,WAAW,CAAC,IAAI;YAC3B,UAAU,KAAK,OAAO,CAAC,QAAQ;YAC/B,QAAQ,eAAe,KAAK,OAAO,CAAC,MAAM;YAC1C,KAAK,OAAO,KAAK,OAAO,CAAC,GAAG;QAC9B;IACF;AACF;AAEA,aAAa;AACb,SAAS","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst getElement = document.querySelector('ul');\n\nconst stringToNumber = (str) => {\n  return Number(str.replace(/[^0-9.-]+/g, ''));\n};\n\nconst sortList = (list) => {\n  return Array.from(list.children)\n    .sort(\n      (a, b) =>\n        stringToNumber(b.dataset.salary) - stringToNumber(a.dataset.salary),\n    )\n    .forEach((item) => list.appendChild(item));\n};\n\nconst getEmployees = (list) => {\n  return Array.from(list.children).map((item) => {\n    return {\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: stringToNumber(item.dataset.salary),\n      age: Number(item.dataset.age),\n    };\n  });\n};\n\ngetEmployees(getElement);\nsortList(getElement);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}